class Solution {
public:
    int minFlips(vector<vector<int>>& mat) {
        int n = mat[0].size();
        int mnSteps = INT_MAX;
        int m = mat.size();
        for(int i=0; i<(1<<n); i++){
            vector<vector<int>> t(mat.begin(), mat.end());
            int stepsCount = 0;
            for(int j=0; j<n; j++){
               if(i&(1<<j)){
                  t[0][j] = !t[0][j];
                  stepsCount++;

                  if(j-1>=0) t[0][j-1] = !t[0][j-1];
                      
                  if(j+1<n) t[0][j+1] = !t[0][j+1];
                      
                  if(0+1 <m) t[1][j] = !t[1][j];        
                
               }
            }
            for(int k=1; k<m; k++){
               for(int l=0; l<n; l++){
                   if(t[k-1][l] != 0){
                       t[k-1][l] = !t[k-1][l];
                       t[k][l] = !t[k][l];
                       stepsCount++;

                       if(l-1>=0) t[k][l-1] = !t[k][l-1];
                        
                       if(l+1<n) t[k][l+1] = !t[k][l+1];

                       if(k+1<m) t[k+1][l] = !t[k+1][l];               
                   }
               }
            }
            bool f =0;
            for(int i=0; i<n; i++){
                if(t[m-1][i] != 0) {
                    f=1;
                break;
                }
            }
            if(f) continue;
            mnSteps = min(mnSteps,stepsCount );
        }
        if(mnSteps == INT_MAX) return -1;
        return mnSteps;
    }
};
