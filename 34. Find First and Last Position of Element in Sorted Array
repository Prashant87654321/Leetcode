class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
       int  n = nums.size();

        int l=0;
        int r=n-1;
        int mid=0;

       while(l <=r)
       {
           mid  = l +(r-l)/2;
           if(target > nums[mid])
           l= mid+1;
           else if(target < nums[mid])
           r= mid-1;
           else
           break;
       }
       if(l > r)
       return {-1,-1};

       int l1 = l, r1 = mid;
       int l2 = mid, r2 = r;
       int mid1=0, mid2=0;
       int ans1=0, ans2=0;
       
       while(l1 <= r1 && nums[r1]==target )
      {
        
          mid1= l1 + (r1-l1)/2;
          if(nums[mid1]!= target)
          l1 = mid1+1;
          else
          {
              ans1 = mid1;
          r1 = mid1 -1;
          }
      }

       while(l2 <= r2 && nums[l2]==target)
      {
          
          mid2= l2 + (r2-l2)/2;
          if(nums[mid2]!= target)
          r2 = mid2-1;
          else
          {
              ans2 = mid2;
           l2 = mid2+1;
          }
      }

      return {ans1, ans2};

    }
};
