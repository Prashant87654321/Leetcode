class Solution {
public:
    bool wordPattern(string pattern, string s) {
        
        unordered_map<char, string > mp1;
        unordered_map<string, bool> mp2;
        int m= pattern.size();
        int n= s.size();
        int j=0;

        for(int i=0; i<m; i++)
        {
            string temp="";
        
            while( j < n && s[j] != ' ')
            {
                temp += s[j];
                j++;
            }
            j++;

            if(mp1.find(pattern[i]) != mp1.end())
            {

               if( mp1[pattern[i]] != temp)
               return false;
            }
            else
            {
                if(mp2.find(temp) != mp2.end())
                return false;

                mp2[temp] = true;
               mp1[pattern[i]] = temp;
               temp.clear();
            }
        }
        if(j != n +1)
        return false;

        return true;
    }
};
