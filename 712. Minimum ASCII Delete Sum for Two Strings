class Solution {
public:
    int solve(string& s1, string &s2, int i, int j, vector<vector<int>>& dp){
        if(dp[i+1][j+1] != -1) return dp[i+1][j+1];

        if(s1[i] == s2[j]) dp[i+1][j+1] = solve(s1, s2, i-1, j-1, dp);
        else dp[i+1][j+1] = min(s1[i] + solve(s1, s2, i-1, j, dp),
                                s2[j] + solve(s1, s2, i, j-1, dp));

        return dp[i+1][j+1];
    }
    int minimumDeleteSum(string s1, string s2) {
        int n = s1.size(), m = s2.size();
        vector<vector<int>> dp(n+1, vector<int>(m+1, -1));
        
        dp[0][0]= 0;
        for(int j=1; j<=m; j++){
            dp[0][j] = int( s2[j-1]) + dp[0][j-1];
        }
        for(int i=1; i<=n; i++){
            dp[i][0] = int(s1[i-1]) + dp[i-1][0];
        }
        
        solve(s1, s2, n-1, m-1, dp);
        return dp[n][m];

    }
};
