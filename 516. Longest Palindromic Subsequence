class Solution {
public:
    int solve(string &s, int l, int r, vector<vector<int>> &dp){
        if(dp[l][r] != 0) return dp[l][r];

        if(l == r) return 1;
        if(l > r) return 0;

        if(s[l] == s[r])dp[l][r] = 2 + solve(s, l+1, r-1, dp);
        else dp[l][r] = max(solve(s, l+1, r, dp), solve(s, l, r-1, dp));

        return dp[l][r];

    }
    int longestPalindromeSubseq(string s) {
        int n = s.size();
        vector<vector<int>> dp(n, vector<int>(n, 0));

        return solve(s,0, n-1, dp);
    }
};
