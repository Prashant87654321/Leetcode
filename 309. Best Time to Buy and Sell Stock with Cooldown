class Solution {
    private:
    int solve(int i, int buy, vector<int> &prices, vector<vector<int>> &dp){
        if(i >=prices.size()) return 0;

        if(dp[i][buy] != -1) return dp[i][buy];

        if(buy){
            return dp[i][buy] = max( -prices[i] + solve(i+1, 0, prices, dp),
                                      0 + solve(i+1, 1, prices, dp));
        }
        else return dp[i][buy] = max( prices[i] + solve(i+2, 1, prices, dp),
                                      0 + solve(i+1, 0, prices, dp));
    }
public:
    int maxProfit(vector<int>& prices) {
        vector<vector<int>> dp((int)prices.size(), vector<int>(2, -1));
        return solve(0, 1, prices, dp);
    }
};
