class Solution {
public:

    int partition(vector<int>& nums, int l, int r)
    {
        int i=l, j=l;
        while( j < r)
        {
            if(nums[j] <= nums[r])
            {
                swap(nums[i],nums[j]);
                i++;
            }
            j++;
        }
        swap(nums[i],nums[r]);
        return i;
    }

    int findKthLargest(vector<int>& nums, int k) {
        int l=0;
        int n = nums.size();
        int r = n-1;
        int p=0;
        for(int i=0; i<n; i++)
        {
           p = partition(nums,l,r);

          if(p == n - k )
          return nums[p];

          else if( p > n - k )
          r = p - 1;
          
          else
          l = p + 1;

        }
      return nums[p];
    }
};
