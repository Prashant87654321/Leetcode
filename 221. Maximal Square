class Solution {
public:
    
    int solve(vector<vector<char>>& matrix, int i, int j, vector<vector<int>>&dp, int& mx){
        if(i >= matrix.size() || j >= matrix[0].size())
        return 0;
        
        if(dp[i][j] != -1) return dp[i][j];
        
        dp[i][j] =  min( solve(matrix, i+1, j, dp, mx),
                             min( solve(matrix, i,j+1, dp, mx),
                                    solve(matrix, i+1, j+1, dp, mx)));

        dp[i][j] = (matrix[i][j] == '1' ? dp[i][j] +1 : 0);
        mx = max(mx, dp[i][j]);

        return dp[i][j];
    }
    int maximalSquare(vector<vector<char>>& matrix) {
        vector<vector<int>> dp(matrix.size(), vector<int>(matrix[0].size(), -1));
        int mx=0;
        solve(matrix, 0,0, dp, mx);

        return (mx*mx);
    }
};
