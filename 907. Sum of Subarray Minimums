class Solution {
public:
    int sumSubarrayMins(vector<int>& arr) {
        stack<int> st;
        int n = arr.size(); 
        st.push(-1);
        int res = 0;
        int md = 1000000007;
        for(int i=0; i<n; i++){
            while(st.size() >1 && arr[st.top()] >= arr[i]){
                long long currIndex = st.top();
                st.pop();
                long long prevIndex = st.top();
                long long nextIndex = i;
                res = (res + (arr[currIndex]*(((currIndex - prevIndex)*(nextIndex - currIndex))%md))%md)%md;
            }
            st.push(i);
        }
        while(st.size() != 1){
            long long currIndex = st.top();
            st.pop();
            long long prevIndex = st.top();
            long long nextIndex = n;
            res = (res + (arr[currIndex]*(((currIndex - prevIndex)*(nextIndex - currIndex))%md))%md)%md;
        }
        return res;
    }
};
