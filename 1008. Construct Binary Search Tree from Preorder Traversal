/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* solve(vector<int>& preorder){
        TreeNode* root = new TreeNode(preorder[0]);
        vector<int> left, right;
        for(auto& v : preorder){
            if(v == preorder[0]) continue;
            if(v < preorder[0]) left.push_back(v);
            else right.push_back(v);
        }
        if(!left.empty())
        root->left = solve(left);
        if(!right.empty())
        root->right = solve(right);

        return root;
    }
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        return solve(preorder);
    }
};
