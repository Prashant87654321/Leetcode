class Solution {
public:
    int col[9], posDiag[18], negDiag[18];
    void solve(int& n,int r, vector<string>& s, vector<vector<string>>& res){
        if(r == n){
            res.push_back(s);
            return;
        }

        for(int c=0; c<n; c++){
            if(col[c] || posDiag[r+c] || negDiag[r-c+n]) {
               continue;
            }

            col[c] = true;
            posDiag[r+c] = true;
            negDiag[r-c+n] = true;
            s[r][c] = 'Q';
            solve(n, r+1, s, res);
            s[r][c] = '.';
            col[c] = false;
            posDiag[r+c] = false;
            negDiag[r-c+n] = false;
        }
    }
    
    int totalNQueens(int n) {
        vector<vector<string>> res;
        vector<string> s;
        string temp = "";
        for(int i=0; i<n; i++) temp += ".";
        for(int i=0; i<n; i++){
            s.push_back(temp);
        }
        solve(n, 0, s, res);
        return res.size();
    }
};
