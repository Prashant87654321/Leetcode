class Solution {
public:
    int racecar(int target) {
        
        queue<pair<long long, long long>> q;
        q.push({0, 1});
        set<pair<long long, long long>> vis;
        int level = 0;
        bool flag = false;
        while(!q.empty()){
          int sz = q.size();
          for(int i=0; i<sz; i++){
              long long pos = q.front().first;
              long long speed = q.front().second;
              q.pop();
              if(pos == target){
                  flag = true;
                  break;
              }
              if(vis.find({pos, speed})!= vis.end()) continue;
              
              vis.insert({pos, speed});
              q.push({pos + speed, speed*2});
              if( ((pos + speed > target) && speed > 0) ||
                   ((pos + speed < target) && speed < 0 ) ){
                       speed = (speed >0) ? -1 : 1;
                       q.push({pos, speed});
                   }
          }
          if(flag) break;

          level++;
        }
        return level;
    }
};
