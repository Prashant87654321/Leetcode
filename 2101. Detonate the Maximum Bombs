class Solution {
public:
    void dfs(vector<vector<int>>& adj, vector<bool>& vis, int v, int& count){
        vis[v]= true;
        count++;

        for(auto u : adj[v]){
            if(!vis[u])
            dfs(adj, vis, u,count);
        }
    }
    int maximumDetonation(vector<vector<int>>& bombs) {
        int n = bombs.size();
        vector<vector<int>> adj(n);
        
        for(int i=0; i<n; i++){
            for(int j=0; j<n; j++){
                if(i==j)continue;

                long long x1 = bombs[i][0], y1 = bombs[i][1], r1 = bombs[i][2];
                long long x2 = bombs[j][0], y2 = bombs[j][1];
                if((x1-x2)*(x1-x2) + (y1-y2)*(y1-y2) <= r1*r1)
                 adj[i].push_back(j);
            }
        }
        int ans=0;
        for(int i=0; i<n; i++){
           int count=0;
           vector<bool> vis(n, false);
           dfs(adj, vis, i, count);
           ans = max(ans, count);
        }

        return ans;
    }
};
