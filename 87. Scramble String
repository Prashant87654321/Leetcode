class Solution {
public:
    unordered_map<string, bool> dp;
    bool solve(string s1, string s2){
        
        if(s1 == s2) return true;
        if(s1.size()<=1) return false;
        string t = s1 + "_" + s2;
        if(dp.find(t) != dp.end()) return dp[t];
        int n = s1.size();
        for(int i=1; i<n; i++){
            if( (solve(s1.substr(0,i), s2.substr(n-i,i)) && solve(s1.substr(i, n-i), s2.substr(0, n-i)) ) ||
                 (solve(s1.substr(0,i), s2.substr(0,i)) && solve(s1.substr(i, n-i), s2.substr(i, n-i)) ) ) {

                    return dp[t] = true;
                 }
        }
        return dp[t] = false;
    }
    bool isScramble(string s1, string s2) {
        return solve(s1, s2);
    }
};
