class Solution {
    const int INF = 1e9;
public:
    int superEggDrop(int k, int n) {
        vector<vector<int>> dp(n+1, vector<int>(k+1,0));
        for(int i=1; i<=n; i++){
            dp[i][0] = INF;                     // for k = 0;
        }
        for(int i=1; i<=n; i++){
            for(int j=1; j<=k; j++){
               dp[i][j] = INF;
               int l = 1, r=i;
               while(l<=r){
                   int f = (l+r)/2;
                   int t = max(dp[f-1][j-1], dp[i-f][j]) + 1;
                   dp[i][j] = min(dp[i][j], t);
                   if(dp[f-1][j-1] > dp[i-f][j]){
                       r = f - 1;
                   }
                   else if(dp[f-1][j-1] < dp[i-f][j]){
                       l = f + 1;
                   }
                   else{
                       break;
                   }
               }
            }
        }
        return dp[n][k];
    }
};
