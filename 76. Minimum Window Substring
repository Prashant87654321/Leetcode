class Solution {
public:
    bool check(vector<pair<int, int>>& freq_t, vector<pair<int, int>>& currFreq){
        for(int i=0; i<26; i++){
            if(freq_t[i].first < currFreq[i].first || freq_t[i].second < currFreq[i].second)
            return false;
        }
        return true;
    }
    void updateFreq(vector<pair<int, int>>& freq, char& c, int val){
        if(c >= 'a'){
            freq[c-'a'].first += val;
        }
        else{
            freq[c-'A'].second += val;
        }
    }
    string minWindow(string s, string t) {
        vector<pair<int, int>> freq(26);  // in (a,A) pairs
        for(auto& c : t){
           updateFreq(freq, c, 1);
        }
        vector<pair<int, int>> currFreq(26);
        string res="";
        int n = s.size();
        int l =0, r =0;
        while(r< n){
           updateFreq(currFreq, s[r], 1);
           if(res != ""){
              updateFreq(currFreq, s[l], -1);
              l++;
           }
           if(check(currFreq, freq)){
               while(check(currFreq, freq)){
                   updateFreq(currFreq, s[l], -1);
                   l++;
               }
               l--;
               updateFreq(currFreq, s[l], 1);
               if( res == "" || r - l + 1 < res.size()){
                   res = s.substr(l, r-l + 1);
               }
           }
          r++;
        }
        return res;
    }
};
