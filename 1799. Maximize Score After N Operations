class Solution {
    int dp[(1<<14)][8];
    int solve(int mask, vector<int> &nums, int op, int &n){

         if(mask == (1<< n)-1){
             return 0;
         }
         if(dp[mask][op] != -1){
             return dp[mask][op];
         }

         int res = 0;
         for(int i=0; i<n; i++){
             if( (mask & (1<<i)) == 0){
                 for(int j=0; j<n; j++){
                     if((i != j)  && (mask & (1<<j)) == 0){
                         res = max(res, op * gcd(nums[i], nums[j]) + 
                               solve((mask | (1<<i) ) | (1<<j), nums, op+1, n) );
                     }
                 }
             }
         }
         return dp[mask][op] = res;
    }
public:
    int maxScore(vector<int>& nums) {
        memset(dp, -1, sizeof(dp));
        int n = nums.size();
        return solve(0, nums, 1, n);
    }
};
