class Solution {
    
public:
    long long minCost(vector<int>& nums, vector<int>& cost) {
        int n = nums.size();
        vector<vector<int>> v(n,vector<int>(2,0));
        for(int i=0; i<n; i++){
            v[i][0]= nums[i];
            v[i][1]= cost[i];
        }
        sort(v.begin(), v.end());
        sort(nums.begin(), nums.end());

        vector<long long> precost(n+1, 0);
        precost[0]=0;
        for(int i=0; i<n; i++){
            precost[i+1] = v[i][1] + precost[i];
        }
        long long res = INT_MAX;
        long long curr = 0;
        for(int i=1; i<n; i++){
           curr += 1LL*(v[i][0]-v[0][0])*v[i][1];
        }
        res = curr;
        
        for(int i=1; i<n; i++){
            curr += 1LL*(nums[i]-nums[i-1])*(precost[i] - (precost[n] - precost[i]));
            res = min(res, curr);
        }
        return res;
    }
};
