class Solution {
public:
    int solve(int i, vector<int>& prices, int buy, int &fee, vector<vector<int>> &dp){
        if(i >= (int)prices.size()) return 0;

        if(dp[i][buy] != -1) return dp[i][buy];
        if(buy){
            dp[i][buy] = max(-prices[i]-fee + solve(i+1, prices, 0, fee, dp),
                              0 + solve(i+1, prices, 1, fee, dp) );
        }
        else{
            dp[i][buy] = max(prices[i] + solve(i+1, prices, 1, fee, dp),
                             0 + solve(i+1, prices, 0, fee, dp));
        }

        return dp[i][buy];
    }
    int maxProfit(vector<int>& prices, int fee) {
        int n = prices.size();
        vector<vector<int>> dp(n, vector<int>(2, -1));
        return solve(0, prices, 1, fee, dp);
    }
};
