class Solution {
public:
    void nextPerm(string& s){
        int n = s.size();
        int i=n-1;
        while(i >0){
            if(s[i-1] < s[i]) break;

            i--;
        }
        reverse(s.begin()+i, s.end());
        if(i > 0){
          int j=i;
          while(j < n){
              if(s[i-1] < s[j])break;

              j++;
          }
          swap(s[i-1], s[j]);
        }
    }
    int getMinSwaps(string num, int k) {
        string t = num;
        while(k--){
            nextPerm(t);
        }
         int i=0;
         int res = 0;
         while(i < num.size()){
            int j = i;
            while(num[i] != t[j]) j++;

            if(i < j){
                while(j > i){
                    swap(t[j], t[j-1]);
                    res++;
                    j--;
                }
            } 
            i++;
         }
         return res;
    }
};
