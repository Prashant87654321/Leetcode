class Solution {
public:
    int miceAndCheese(vector<int>& reward1, vector<int>& reward2, int k) {
        int n = reward1.size();
        priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>> > pq;
        for(int i=0; i<n; i++)
        {
          pq.push( make_pair(reward1[i]-reward2[i], i) );
          if(pq.size() > k)
          pq.pop();
        }
        int sum=0;
        while(!pq.empty())
        {
           auto p = pq.top(); pq.pop();
           sum += reward1[p.second];
           reward1[p.second]=0;
        }
        for(int i=0; i<n; i++)
        {
            if(reward1[i] == 0)
            continue;

            sum += reward2[i];
        }

        return sum;
    }
};
