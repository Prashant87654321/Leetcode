class Solution {
public:
    bool dfs(int i, int j, int &n, int &m, vector<vector<int>> &grid){
       if( i>=n || j>=m) return false;
       if(grid[i][j] == 0) return false;
       if(i == n-1 && j == m-1) return true;
       grid[i][j] = 0;
       return dfs(i+1, j, n, m, grid) || dfs(i, j+1, n, m, grid);

    }
    bool isPossibleToCutPath(vector<vector<int>>& grid) {
        int n = grid.size(), m = grid[0].size();
        
        if( dfs(0, 0, n, m, grid) == false) return true;
        grid[0][0] = 1;

        return (dfs(0, 0, n, m, grid) != true);
    }
};
