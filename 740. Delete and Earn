class Solution {
public:
    int deleteAndEarn(vector<int>& nums) {
        unordered_map<int, int> count;
        sort(nums.begin(), nums.end());
        vector<int> arr;
        int n= nums.size();
        for(int i=0; i<n; i++){
          if(count[nums[i]] == 0) arr.push_back(nums[i]);

          count[nums[i]]++; 
        }

        n = arr.size();
        int prev=0, prev2=0, curr=0;
        for(int i=0; i<n; i++){
           curr = arr[i]*count[arr[i]];

           if(i >0 && arr[i] -1 == arr[i-1]){
               curr = max(curr + prev2, prev);
           }
           else{
               curr += prev;
           }
           prev2 = prev;
           prev = curr;
        }
        return curr;
    }
};
