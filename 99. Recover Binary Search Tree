class Solution {
public:
    void recoverTree(TreeNode* root) {
        TreeNode* curr = root;
        TreeNode *first=NULL, *second=NULL, *prev= NULL, *pre = NULL;

        while(curr != NULL){
            if(curr->left == NULL ){
               if(prev != NULL && curr->val < prev->val){
                   if(first == NULL) first= prev;
                   second = curr;
               }
               prev= curr;
               curr = curr->right;
            }
            else{
                pre = curr->left;
                while(pre->right != NULL && pre->right != curr){
                    pre = pre->right;
                }
                if(pre->right == NULL){
                    pre->right = curr;
                    curr = curr->left;
                }
                else{
                    pre->right = NULL;

                    if(prev != NULL && curr->val < prev->val){
                   if(first == NULL) first= prev;
                    second = curr;
                      }
                   prev= curr;

                   curr= curr->right;
                }
            }
        }

        int temp = first->val;
        first->val = second->val;
        second->val = temp;
    }
};
