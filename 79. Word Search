class Solution {
public:
    bool searchWord(vector<vector<char>>& board, string& word,vector<vector<bool>>& vis ,int i, int j,int index)
    {
       if(i <0 || j<0 || i >=board.size() || j >= board[0].size() )
       {
         return false;
       }
       
       if(vis[i][j])
       return false;

       if(word[index] != board[i][j])
       {
        return false;
       }

       if(index == word.size()-1)
       return true;

       vis[i][j]=true;

        if(searchWord(board, word,vis,i-1,j,index+1) )
        return true;
        
        if(searchWord(board, word,vis, i,j-1,index+1) )
        return true;

        if(searchWord(board, word,vis, i+1,j,index+1) )
        return true;

        if(searchWord(board, word,vis, i,j+1,index+1) )
        return true;

        vis[i][j]=false;

        return false;
    }
    bool exist(vector<vector<char>>& board, string word) {
        int m= board.size();
        int n= board[0].size();

        vector<vector<bool>> vis(m, vector<bool>(n, false));
        for(int i=0; i<m; i++)
        {
            for(int j=0; j<n; j++)
            {
                if(board[i][j]== word[0])
                {
                    bool flag = searchWord(board, word,vis, i, j, 0);

                    if(flag == true)
                    return true;
                }
            }
        }
        return false;
    }
};
