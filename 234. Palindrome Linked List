class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        ListNode *prev, *curr, *nxt;
        prev= NULL;
        curr = head;
        if(curr != NULL)
        nxt = curr->next;
        while(curr != NULL)
        {
            curr->next = prev;
            prev = curr;
            curr = nxt;
            if(curr != NULL)
            nxt = curr->next;
        }
        return prev;
    }

    bool isPalindrome(ListNode* head) {
        if(!head->next )
        return true;

        ListNode *slow=head,*fast= head->next;
        while(fast)
        {
            slow= slow->next;
            fast = fast->next;
            if(fast)
            fast = fast->next;
        }

        ListNode* head_rev = reverseList(slow);

        while(head && head_rev)
        {
            if(head->val != head_rev->val)
            return false;

            head = head->next;
            head_rev = head_rev->next;
        }
        return true;
    }
};
