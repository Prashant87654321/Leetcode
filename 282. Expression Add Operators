class Solution {
public:
    vector<string> res;
    void solve(int i, long long prev, long long val, string t, string &num, long long target){
        if(i == num.size()){
            if(val == target) res.push_back(t);
            return;
        }
        string tmp="";
        for(int j=i; j<num.size(); j++){
            tmp.push_back(num[j]);
            if(tmp.size()>1 && tmp[0] == '0') return;
            long long operand = stoll(tmp);
            if(t.size() == 0){
                solve(j+1, operand, operand, tmp, num, target);
            }
            else{
                solve(j+1, operand, val + operand, t + "+" + tmp, num, target);
                solve(j+1, -operand, val - operand, t + "-" + tmp, num, target);
                solve(j+1, prev*operand, val - prev + prev*operand, t + "*" + tmp, num, target);
            }
        }
    }
    vector<string> addOperators(string num, int target) {  
        solve(0, 0, 0, "", num, static_cast<long long>(target));

        return res;
    }
        
};
