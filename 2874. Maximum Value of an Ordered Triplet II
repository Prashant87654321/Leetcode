class Solution {
public:
    long long maximumTripletValue(vector<int>& nums) {
        int n = nums.size();
        set<int, greater<int>> mxNums;
        map<int, int> freq;
        for(int i=0; i<n; i++){
            freq[nums[i]]++;
            if(freq[nums[i]] == 1)
            mxNums.insert(nums[i]);
        }
        int mx = nums[0], mn = nums[0];
        freq[nums[0]]--;
        if(freq[nums[0]] == 0) {
            freq.erase(nums[0]);
            mxNums.erase(nums[0]);
        }
        long long res = 0;
        for(int i=1; i<n; i++){
           freq[nums[i]]--;
           if(freq[nums[i]] == 0) {
               freq.erase(nums[i]);
               mxNums.erase(nums[i]);
           }
           
           int diff1 = mn - nums[i], diff2 = mx - nums[i];
           int mult1 = freq.begin()->first;
           int mult2 = *mxNums.begin();

           long long res1 = max(1LL*diff1*mult1, 1LL*diff1*mult2);
           long long res2 = max(1LL*diff2*mult1, 1LL*diff2*mult2);

           res = max(res, max(res1, res2));
           mn = min(mn, nums[i]);
           mx = max(mx, nums[i]);
        }
        return res;
    }
};
