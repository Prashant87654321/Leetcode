class CombinationIterator {
    vector<string> comb;
    string s;
    int len;
    vector<string>::iterator it;
public:
    void solve(int i, string& curr){
        if(curr.size() == len){
            comb.push_back(curr);
            return;
        }
        for(int j= i; j<s.size(); j++){
            curr.push_back(s[j]);
            solve(j+1, curr);
            curr.pop_back();
        }
    }
    CombinationIterator(string characters, int combinationLength) {
        s = characters;
        len = combinationLength;
        string curr = "";
        solve(0, curr);
        it = comb.begin();
    }
    
    string next() {
        return *it++;
    }
    
    bool hasNext() {
        return it != comb.end();
    }
};

/**
 * Your CombinationIterator object will be instantiated and called as such:
 * CombinationIterator* obj = new CombinationIterator(characters, combinationLength);
 * string param_1 = obj->next();
 * bool param_2 = obj->hasNext();
 */
